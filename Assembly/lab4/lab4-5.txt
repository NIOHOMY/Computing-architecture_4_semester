org 100h
.data        
cwd
a dw 6,-20,-1,3,0,7,2
len equ ($-a)/2
c dw -4
d dw 10
result dw 1 
sign dw 1 
maxR dw 0
prom db 0
.code
start:    
mov ax, @data
mov ds,ax
lea si, a
mov cx, len
_1:
lodsw 
cmp ax,0
jns _no     
cmp c,0
jns _no
cmp ax, c
jb _no
cmp ax, d
ja _mul
mul result
mov result, ax
_mul:
cmp d ,0
jl _no
mul result
mov result, ax
_no: 
loop _1  
cmp [result], 0
jl pushMinus
goback:
jmp split 
print:
cmp [sign], -1
jne printDigits
mov ah, 2
mov dx, '-'
int 21h 

printDigits:   
    pop dx
    mov ah, 2
    int 21h 
    loop printDigits
    ret

split:
mov ax, [result]
mov bl, 10
idiv bl
mov [prom], ah
cbw
mov [result], ax

mov ax, 0
mov al, [prom]
add ax, '0'
push ax

mov ax, [maxR]
inc ax
mov [maxR], ax

cmp [result], 0
mov cx, [maxR]
je print

jmp split  

pushMinus:
    mov [sign], -1
    mov ax, [result]
    mov bx, -1
    imul bx
    mov [result], ax
    jmp goback
.exit
end start